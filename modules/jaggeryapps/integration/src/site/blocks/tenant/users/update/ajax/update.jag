<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");

var lifeCycleModule = jagg.module("lifecycle");
var log=new Log();
var mod = jagg.module("urlmapper");
var permissionMod = jagg.module("permission");
var tenantMod = jagg.module("tenant");

(function () {
	var action = request.getParameter("action"),
	site = require("/site/conf/site.json");
    if (!jagg.getUser()) {
        print(UNAUTHORIZED_ERROR_RESPONSE);
        return;
    }
    if(action == "updateUserRoles"){
        var userName=request.getParameter("userName");
        var newRoles= parse(request.getParameter("rolesToAdd"));
        var rolesToDelete= parse(request.getParameter("rolesToDelete"));
        var hasTenantLevelUserMgtPermission = permissionMod.hasTenantLevelUserMgtPermission();
        if ( hasTenantLevelUserMgtPermission ){
            try {
                if(newRoles.length || rolesToDelete.length){
                    log.info(" user: "+userName
                             +". New user roles:"+newRoles.join(", ")
                             +" .Removed Roles: "+rolesToDelete.join(", "));
                    tenantMod.updateUserRoles(userName, newRoles, rolesToDelete);
                }
            } catch (e) {

                var msg = "Error while updating user roles";
                log.error(msg+" of user: "+userName
                          +". New user roles:"+newRoles.join(", ")
                          +" .Removed Roles: "+rolesToDelete.join(", "));
                log.error(e);
                response.status = 400;
                response.content = e;
            }
        } else {
            response.sendError(401, "Unauthorized!!! Only Application Owner has permission to complete this action");
        }
    } else {
		throw new Error("No action specified");
	}
}());

%>

