<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/jagg.jag");
include("/jagg/constants.jag");

var log = new Log('modules/databases/drop/drop.jag');
var modManager = jagg.module("manager");
var wso2_rss_instanceName = 'SYSTEM';
var storageServerURL = modManager.getPropertyValue(PROPERTY_STORAGE_SERVER_URL);
var environmentName = modManager.getPropertyValue(PROPERTY_RSS_ENVIRONMENT_NAME);

var dropDatabase = function (databaseName){
	var ws = require('ws');
	var dropDatabaseService = new ws.WSRequest();
	var options = new Array();
	options.useSOAP = 1.2;
	options.action = "urn:removeDatabase";
	options.mep = "in-only";

	var payload ='<ser:removeDatabase  xmlns:ser="http://service.core.rssmanager.carbon.wso2.org">'+
	'<ser:environmentName>' + environmentName + '</ser:environmentName>' +
	'<ser:rssInstanceName>' + wso2_rss_instanceName + '</ser:rssInstanceName>' +
	'<ser:databaseName>'+databaseName+'</ser:databaseName></ser:removeDatabase>';

	modManager.setAuthHeaders(options);
	try {
		dropDatabaseService.open(options, storageServerURL+'RSSAdmin', false);
		dropDatabaseService.send(payload);
	} catch (e) {
		log.error("Error while dropping database : " + databaseName );
		log.error(e);
		throw e;
	}

};



