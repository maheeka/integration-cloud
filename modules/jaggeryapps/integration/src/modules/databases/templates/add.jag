<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/jagg.jag");
include("/jagg/constants.jag");

var log = new Log('modules/databases/templates/add.jag');
var modManager = jagg.module("manager");
var storageServerURL = modManager.getPropertyValue(PROPERTY_STORAGE_SERVER_URL);
var environmentName = modManager.getPropertyValue(PROPERTY_RSS_ENVIRONMENT_NAME);

var createTemplateWithAllPermissions = function (templateName){
	var ws = require('ws');
	var createTemplateService = new ws.WSRequest();
	var options = new Array();
	options.useSOAP = 1.2;
	options.mep = "in-only";
	options.action = "urn:addDatabasePrivilegeTemplate";
	options.robust = true;
    var payload = '<ser:addDatabasePrivilegeTemplate xmlns:ser="http://service.core.rssmanager.carbon.wso2.org" ' +
            'xmlns:xsd="http://dto.core.rssmanager.carbon.wso2.org/xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">' +
            '<ser:environmentName>' + environmentName + '</ser:environmentName>' +
            '<ser:template>' +
            '<xsd:name>' + templateName + '</xsd:name>' +
            '<xsd:privileges xsi:type="xsd:MySQLPrivilegeSetInfo">' +
            '<xsd:alterPriv>Y</xsd:alterPriv>' +
            '<xsd:createPriv>Y</xsd:createPriv>' +
            '<xsd:deletePriv>Y</xsd:deletePriv>' +
            '<xsd:dropPriv>Y</xsd:dropPriv>' +
            '<xsd:indexPriv>Y</xsd:indexPriv>' +
            '<xsd:insertPriv>Y</xsd:insertPriv>' +
            '<xsd:selectPriv>Y</xsd:selectPriv>' +
            '<xsd:updatePriv>Y</xsd:updatePriv>' +
            '<xsd:alterRoutinePriv>Y</xsd:alterRoutinePriv>' +
            '<xsd:createRoutinePriv>Y</xsd:createRoutinePriv>' +
            '<xsd:createTmpTablePriv>Y</xsd:createTmpTablePriv>' +
            '<xsd:createViewPriv>Y</xsd:createViewPriv>' +
            '<xsd:eventPriv>Y</xsd:eventPriv>' +
            '<xsd:executePriv>Y</xsd:executePriv>' +
            '<xsd:grantPriv>Y</xsd:grantPriv>' +
            '<xsd:lockTablesPriv>Y</xsd:lockTablesPriv>' +
            '<xsd:referencesPriv>Y</xsd:referencesPriv>' +
            '<xsd:showViewPriv>Y</xsd:showViewPriv>' +
            '<xsd:triggerPriv>Y</xsd:triggerPriv>' +
            '</xsd:privileges>' +
            '</ser:template>' +
            '</ser:addDatabasePrivilegeTemplate>';
    modManager.setAuthHeaders(options);
    try {

        createTemplateService.open(options, storageServerURL + 'RSSAdmin', false);
        var result = createTemplateService.send(payload);
        //log.info(result);
        return true;
    } catch (e) {

        log.error("Error while creating database template : " + templateName);
        log.error(e);
        throw e;
    }
};

%>

